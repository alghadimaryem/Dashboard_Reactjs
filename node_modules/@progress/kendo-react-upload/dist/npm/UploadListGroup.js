"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var UploadFileStatus_1 = require("./interfaces/UploadFileStatus");
var UploadListSingleItem_1 = require("./UploadListSingleItem");
var UploadListMultiItem_1 = require("./UploadListMultiItem");
var utils_1 = require("./utils/utils");
/**
 * @hidden
 */
var UploadListGroup = /** @class */ (function (_super) {
    __extends(UploadListGroup, _super);
    function UploadListGroup() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onClick = function () {
            _this.props.onClick.call(undefined, _this.props.index);
        };
        return _this;
    }
    UploadListGroup.prototype.componentDidUpdate = function () {
        var _a = this.props, navigationIndex = _a.navigationIndex, index = _a.index;
        if (navigationIndex === index &&
            this._element &&
            document.activeElement !== this._element) {
            this._element.focus();
        }
    };
    UploadListGroup.prototype.render = function () {
        var _this = this;
        var _a = this.props, files = _a.files, async = _a.async, disabled = _a.disabled, navigationIndex = _a.navigationIndex, index = _a.index, listItemUI = _a.listItemUI, onCancel = _a.onCancel, onRemove = _a.onRemove, onRetry = _a.onRetry;
        var firstFile = files[0];
        var isFileSuccess = firstFile.status === UploadFileStatus_1.UploadFileStatus.Uploaded ||
            firstFile.status === UploadFileStatus_1.UploadFileStatus.Initial;
        var liClassName = kendo_react_common_1.classNames('k-file', utils_1.default.filesHaveValidationErrors(files) ? 'k-file-invalid' : '', firstFile.status === UploadFileStatus_1.UploadFileStatus.UploadFailed || firstFile.status === UploadFileStatus_1.UploadFileStatus.RemoveFailed ?
            'k-file-error' : '', firstFile.status === UploadFileStatus_1.UploadFileStatus.Uploading ? 'k-file-progress' : '', isFileSuccess ? 'k-file-success' : '', navigationIndex === index ? 'k-state-focused' : '');
        var itemOptions = {
            async: async,
            disabled: disabled,
            onCancel: onCancel,
            onRemove: onRemove,
            onRetry: onRetry
        };
        var ItemComponent = listItemUI || (files.length === 1 ? UploadListSingleItem_1.UploadListSingleItem : UploadListMultiItem_1.UploadListMultiItem);
        return (React.createElement("li", { ref: function (ref) { return _this._element = ref; }, className: liClassName, "data-uid": firstFile.uid, tabIndex: -1, onClick: this.onClick },
            React.createElement(ItemComponent, __assign({ files: files }, itemOptions))));
    };
    return UploadListGroup;
}(React.Component));
exports.UploadListGroup = UploadListGroup;
//# sourceMappingURL=UploadListGroup.js.map