"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("./messages");
var utils_1 = require("./utils/utils");
var UploadListActionButton_1 = require("./UploadListActionButton");
/**
 * @hidden
 */
var UploadListSingleItem = /** @class */ (function (_super) {
    __extends(UploadListSingleItem, _super);
    function UploadListSingleItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @hidden
     */
    UploadListSingleItem.prototype.getFileExtension = function (file) {
        return file.extension ? file.extension.substring(1) : '';
    };
    /**
     * @hidden
     */
    UploadListSingleItem.prototype.getFileValidationMessage = function (file, isUploadFailed) {
        var localizationService = kendo_react_intl_1.provideLocalizationService(this);
        var validationMessage = '';
        if (isUploadFailed) {
            validationMessage = localizationService.toLanguageString(messages_1.statusUploadFailed, messages_1.messages[messages_1.statusUploadFailed]);
        }
        else if (file.validationErrors && file.validationErrors.length > 0) {
            var messageKey = "upload." + file.validationErrors[0];
            validationMessage = localizationService.toLanguageString(messageKey, messages_1.messages[messageKey]);
        }
        return validationMessage;
    };
    /**
     * @hidden
     */
    UploadListSingleItem.prototype.getFileExtensionIcon = function (file) {
        switch (file.extension) {
            case '.png':
            case '.jpg':
            case '.jpeg':
            case '.tiff':
            case '.bmp':
            case '.gif':
                return 'k-i-file-image';
            case '.mp3':
            case '.mp4':
            case '.wav':
                return 'k-i-file-audio';
            case '.mkv':
            case '.webm':
            case '.flv':
            case '.gifv':
            case '.avi':
            case '.wmv':
                return 'k-i-file-video';
            case '.txt':
                return 'k-i-file-txt';
            case '.pdf':
                return 'k-i-file-pdf';
            case '.ppt':
            case '.pptx':
                return 'k-i-file-presentation';
            case '.csv':
            case '.xls':
            case '.xlsx':
                return 'k-i-file-data';
            case '.html':
            case '.css':
            case '.js':
            case '.ts':
                return 'k-i-file-programming';
            case '.exe':
                return 'k-i-file-config';
            case '.zip':
            case '.rar':
                return 'k-i-file-zip';
            default:
                return 'k-i-file';
        }
    };
    /**
     * @hidden
     */
    UploadListSingleItem.prototype.renderValidationError = function (file, isUploadFailed) {
        return (React.createElement("span", { className: 'k-file-name-size-wrapper', key: '2' },
            React.createElement("span", { className: 'k-file-name k-file-name-invalid', title: file.name }, file.name),
            React.createElement("span", { className: 'k-file-validation-message k-text-error' }, this.getFileValidationMessage(file, isUploadFailed))));
    };
    /**
     * @hidden
     */
    UploadListSingleItem.prototype.renderFileDetails = function (file) {
        var localizationService = kendo_react_intl_1.provideLocalizationService(this);
        var successMessage = localizationService.toLanguageString(messages_1.statusUploaded, messages_1.messages[messages_1.statusUploaded]);
        return (React.createElement("span", { className: 'k-file-name-size-wrapper', key: '2' },
            React.createElement("span", { className: 'k-file-name', title: file.name }, file.name),
            file.progress !== 100 ?
                React.createElement("span", { className: 'k-file-size' }, utils_1.default.getTotalFilesSizeMessage([file])) :
                React.createElement("span", { className: 'k-file-validation-message k-text-success' }, successMessage)));
    };
    /**
     * @hidden
     */
    UploadListSingleItem.prototype.render = function () {
        var _a = this.props, files = _a.files, others = __rest(_a, ["files"]);
        var file = files[0];
        var itemClassName = kendo_react_common_1.classNames('k-file-single');
        var _b = utils_1.default.getFileStatus([file]), isUploaded = _b[1], isUploadFailed = _b[2], isUploadValidationFailed = _b[3];
        var showProgressBar = !isUploadValidationFailed && !isUploaded && !isUploadFailed;
        return (React.createElement("div", { className: itemClassName },
            React.createElement("div", { className: 'k-progressbar', style: {
                    transition: 'opacity 1s ease-in-out',
                    opacity: showProgressBar ? 1 : 0
                } },
                React.createElement("span", { className: 'k-progress', style: { width: (file.progress || 0) + '%' } })),
            React.createElement("span", { className: 'k-file-group-wrapper', key: '1' },
                React.createElement("span", { className: 'k-file-group k-icon ' + this.getFileExtensionIcon(file) }),
                React.createElement("span", { className: 'k-file-state' })),
            isUploadValidationFailed || isUploadFailed ?
                this.renderValidationError(file, isUploadFailed) :
                this.renderFileDetails(file),
            React.createElement(UploadListActionButton_1.UploadListActionButton, __assign({ uid: file.uid, status: file.status, progress: file.progress }, others))));
    };
    return UploadListSingleItem;
}(React.Component));
exports.UploadListSingleItem = UploadListSingleItem;
kendo_react_intl_1.registerForLocalization(UploadListSingleItem);
//# sourceMappingURL=UploadListSingleItem.js.map