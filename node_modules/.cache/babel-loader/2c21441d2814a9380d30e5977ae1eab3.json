{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nvar CHROME_REGEX = /(chrome)[ \\/]([\\w.]+)/i;\nvar SAFARI_REGEX = /(webkit)[ \\/]([\\w.]+)/i;\n/**\n * @hidden\n */\n\nvar UploadInput =\n/** @class */\nfunction (_super) {\n  __extends(UploadInput, _super);\n\n  function UploadInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onMouseDown = function (e) {\n      if (_this.props.onMouseDown) {\n        _this.props.onMouseDown(e);\n      }\n    };\n\n    _this.onAdd = function () {\n      var ua = navigator.userAgent;\n      var input = _this._input;\n\n      if (input) {\n        if (_this.props.onAdd && input.files) {\n          _this.props.onAdd.call(undefined, input.files);\n        }\n        /*\n            Chrome and Internet Explorer do not trigger a `change` event\n            when a file with the same name is selected a number of consecutive times.\n            As a workaround, clear the input value after handling the file.\n        */\n\n\n        if (!(!ua.match(CHROME_REGEX) && ua.match(SAFARI_REGEX))) {\n          input.type = '';\n          input.type = 'file';\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(UploadInput.prototype, \"actionElement\", {\n    get: function () {\n      return this._input;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  UploadInput.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        multiple = _a.multiple,\n        async = _a.async,\n        disabled = _a.disabled,\n        accept = _a.accept;\n    return React.createElement(\"input\", {\n      ref: function (ref) {\n        return _this._input = ref;\n      },\n      autoComplete: 'off',\n      name: async.saveField,\n      accept: accept,\n      type: 'file',\n      tabIndex: -1,\n      multiple: multiple,\n      disabled: disabled,\n      onChange: this.onAdd,\n      onMouseDown: this.onMouseDown\n    });\n  };\n\n  return UploadInput;\n}(React.Component);\n\nexport { UploadInput };","map":null,"metadata":{},"sourceType":"module"}