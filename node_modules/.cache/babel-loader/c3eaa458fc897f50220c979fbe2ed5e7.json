{"ast":null,"code":"// Other important pens.\n// Map: https://codepen.io/themustafaomar/pen/ZEGJeZq\n// Dashboard: https://codepen.io/themustafaomar/pen/jLMPKm\nlet dropdowns = document.querySelectorAll('.navbar .dropdown-toggler');\nlet dropdownIsOpen = false; // Handle dropdown menues\n\nif (dropdowns.length) {\n  // Usually I don't recommend doing this (adding many event listeners to elements have the same handler)\n  // Instead use event delegation: https://javascript.info/event-delegation\n  // Why: https://gomakethings.com/why-event-delegation-is-a-better-way-to-listen-for-events-in-vanilla-js\n  // But since we only have two dropdowns, no problem with that. \n  dropdowns.forEach(dropdown => {\n    dropdown.addEventListener('click', event => {\n      let target = document.querySelector(`#${event.target.dataset.dropdown}`);\n\n      if (target) {\n        if (target.classList.contains('show')) {\n          target.classList.remove('show');\n          dropdownIsOpen = false;\n        } else {\n          target.classList.add('show');\n          dropdownIsOpen = true;\n        }\n      }\n    });\n  });\n} // Handle closing dropdowns if a user clicked the body\n\n\nwindow.addEventListener('mouseup', event => {\n  if (dropdownIsOpen) {\n    dropdowns.forEach(dropdownButton => {\n      let dropdown = document.querySelector(`#${dropdownButton.dataset.dropdown}`);\n      let targetIsDropdown = dropdown == event.target;\n\n      if (dropdownButton == event.target) {\n        return;\n      }\n\n      if (!targetIsDropdown && !dropdown.contains(event.target)) {\n        dropdown.classList.remove('show');\n      }\n    });\n  }\n});\n\nfunction handleSmallScreens() {\n  document.querySelector('.navbar-toggler').addEventListener('click', () => {\n    let navbarMenu = document.querySelector('.navbar-menu');\n\n    if (navbarMenu.style.display === 'flex') {\n      navbarMenu.style.display = 'none';\n      return;\n    }\n\n    navbarMenu.style.display = 'flex';\n  });\n}\n\nhandleSmallScreens();","map":{"version":3,"sources":["C:/Users/IPS/Desktop/Projet/Dashboard/react-bootstrap-simple-sidebar/src/components/content/drop.js"],"names":["dropdowns","document","querySelectorAll","dropdownIsOpen","length","forEach","dropdown","addEventListener","event","target","querySelector","dataset","classList","contains","remove","add","window","dropdownButton","targetIsDropdown","handleSmallScreens","navbarMenu","style","display"],"mappings":"AAAA;AACA;AACA;AAEA,IAAIA,SAAS,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,2BAA1B,CAAhB;AACA,IAAIC,cAAc,GAAG,KAArB,C,CAEA;;AACA,IAAIH,SAAS,CAACI,MAAd,EAAsB;AACpB;AACA;AACA;AACA;AACAJ,EAAAA,SAAS,CAACK,OAAV,CAAmBC,QAAD,IAAc;AAC9BA,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAoCC,KAAD,IAAW;AAC5C,UAAIC,MAAM,GAAGR,QAAQ,CAACS,aAAT,CAAwB,IAAGF,KAAK,CAACC,MAAN,CAAaE,OAAb,CAAqBL,QAAS,EAAzD,CAAb;;AAEA,UAAIG,MAAJ,EAAY;AACV,YAAIA,MAAM,CAACG,SAAP,CAAiBC,QAAjB,CAA0B,MAA1B,CAAJ,EAAuC;AACrCJ,UAAAA,MAAM,CAACG,SAAP,CAAiBE,MAAjB,CAAwB,MAAxB;AACAX,UAAAA,cAAc,GAAG,KAAjB;AACD,SAHD,MAGO;AACLM,UAAAA,MAAM,CAACG,SAAP,CAAiBG,GAAjB,CAAqB,MAArB;AACAZ,UAAAA,cAAc,GAAG,IAAjB;AACD;AACF;AACF,KAZD;AAaD,GAdD;AAeD,C,CAED;;;AACAa,MAAM,CAACT,gBAAP,CAAwB,SAAxB,EAAoCC,KAAD,IAAW;AAC5C,MAAIL,cAAJ,EAAoB;AAClBH,IAAAA,SAAS,CAACK,OAAV,CAAmBY,cAAD,IAAoB;AACpC,UAAIX,QAAQ,GAAGL,QAAQ,CAACS,aAAT,CAAwB,IAAGO,cAAc,CAACN,OAAf,CAAuBL,QAAS,EAA3D,CAAf;AACA,UAAIY,gBAAgB,GAAGZ,QAAQ,IAAIE,KAAK,CAACC,MAAzC;;AAEA,UAAIQ,cAAc,IAAIT,KAAK,CAACC,MAA5B,EAAoC;AAClC;AACD;;AAED,UAAK,CAACS,gBAAF,IAAwB,CAACZ,QAAQ,CAACO,QAAT,CAAkBL,KAAK,CAACC,MAAxB,CAA7B,EAA+D;AAC7DH,QAAAA,QAAQ,CAACM,SAAT,CAAmBE,MAAnB,CAA0B,MAA1B;AACD;AACF,KAXD;AAYD;AACF,CAfD;;AAiBA,SAASK,kBAAT,GAA8B;AAC5BlB,EAAAA,QAAQ,CAACS,aAAT,CAAuB,iBAAvB,EACGH,gBADH,CACoB,OADpB,EAC6B,MAAM;AACjC,QAAIa,UAAU,GAAGnB,QAAQ,CAACS,aAAT,CAAuB,cAAvB,CAAjB;;AAEA,QAAIU,UAAU,CAACC,KAAX,CAAiBC,OAAjB,KAA6B,MAAjC,EAAyC;AACvCF,MAAAA,UAAU,CAACC,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACA;AACD;;AAEDF,IAAAA,UAAU,CAACC,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACD,GAVD;AAWD;;AAEDH,kBAAkB","sourcesContent":["// Other important pens.\r\n// Map: https://codepen.io/themustafaomar/pen/ZEGJeZq\r\n// Dashboard: https://codepen.io/themustafaomar/pen/jLMPKm\r\n\r\nlet dropdowns = document.querySelectorAll('.navbar .dropdown-toggler')\r\nlet dropdownIsOpen = false\r\n\r\n// Handle dropdown menues\r\nif (dropdowns.length) {\r\n  // Usually I don't recommend doing this (adding many event listeners to elements have the same handler)\r\n  // Instead use event delegation: https://javascript.info/event-delegation\r\n  // Why: https://gomakethings.com/why-event-delegation-is-a-better-way-to-listen-for-events-in-vanilla-js\r\n  // But since we only have two dropdowns, no problem with that. \r\n  dropdowns.forEach((dropdown) => {\r\n    dropdown.addEventListener('click', (event) => {\r\n      let target = document.querySelector(`#${event.target.dataset.dropdown}`)\r\n\r\n      if (target) {\r\n        if (target.classList.contains('show')) {\r\n          target.classList.remove('show')\r\n          dropdownIsOpen = false\r\n        } else {\r\n          target.classList.add('show')\r\n          dropdownIsOpen = true\r\n        }\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// Handle closing dropdowns if a user clicked the body\r\nwindow.addEventListener('mouseup', (event) => {\r\n  if (dropdownIsOpen) {\r\n    dropdowns.forEach((dropdownButton) => {\r\n      let dropdown = document.querySelector(`#${dropdownButton.dataset.dropdown}`)\r\n      let targetIsDropdown = dropdown == event.target\r\n\r\n      if (dropdownButton == event.target) {\r\n        return\r\n      }\r\n\r\n      if ((!targetIsDropdown) && (!dropdown.contains(event.target))) {\r\n        dropdown.classList.remove('show')\r\n      }\r\n    })\r\n  }\r\n})\r\n\r\nfunction handleSmallScreens() {\r\n  document.querySelector('.navbar-toggler')\r\n    .addEventListener('click', () => {\r\n    let navbarMenu = document.querySelector('.navbar-menu')\r\n\r\n    if (navbarMenu.style.display === 'flex') {\r\n      navbarMenu.style.display = 'none'\r\n      return\r\n    }\r\n\r\n    navbarMenu.style.display = 'flex'\r\n  })\r\n}\r\n\r\nhandleSmallScreens()"]},"metadata":{},"sourceType":"module"}