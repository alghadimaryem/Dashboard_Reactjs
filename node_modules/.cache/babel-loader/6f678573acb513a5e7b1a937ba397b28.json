{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { provideLocalizationService, registerForLocalization } from '@progress/kendo-react-intl';\nimport { messages, statusUploaded, statusUploadFailed } from './messages';\nimport utils from './utils/utils';\nimport { UploadListActionButton } from './UploadListActionButton';\n/**\n * @hidden\n */\n\nvar UploadListSingleItem =\n/** @class */\nfunction (_super) {\n  __extends(UploadListSingleItem, _super);\n\n  function UploadListSingleItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  UploadListSingleItem.prototype.getFileExtension = function (file) {\n    return file.extension ? file.extension.substring(1) : '';\n  };\n  /**\n   * @hidden\n   */\n\n\n  UploadListSingleItem.prototype.getFileValidationMessage = function (file, isUploadFailed) {\n    var localizationService = provideLocalizationService(this);\n    var validationMessage = '';\n\n    if (isUploadFailed) {\n      validationMessage = localizationService.toLanguageString(statusUploadFailed, messages[statusUploadFailed]);\n    } else if (file.validationErrors && file.validationErrors.length > 0) {\n      var messageKey = \"upload.\" + file.validationErrors[0];\n      validationMessage = localizationService.toLanguageString(messageKey, messages[messageKey]);\n    }\n\n    return validationMessage;\n  };\n  /**\n   * @hidden\n   */\n\n\n  UploadListSingleItem.prototype.getFileExtensionIcon = function (file) {\n    switch (file.extension) {\n      case '.png':\n      case '.jpg':\n      case '.jpeg':\n      case '.tiff':\n      case '.bmp':\n      case '.gif':\n        return 'k-i-file-image';\n\n      case '.mp3':\n      case '.mp4':\n      case '.wav':\n        return 'k-i-file-audio';\n\n      case '.mkv':\n      case '.webm':\n      case '.flv':\n      case '.gifv':\n      case '.avi':\n      case '.wmv':\n        return 'k-i-file-video';\n\n      case '.txt':\n        return 'k-i-file-txt';\n\n      case '.pdf':\n        return 'k-i-file-pdf';\n\n      case '.ppt':\n      case '.pptx':\n        return 'k-i-file-presentation';\n\n      case '.csv':\n      case '.xls':\n      case '.xlsx':\n        return 'k-i-file-data';\n\n      case '.html':\n      case '.css':\n      case '.js':\n      case '.ts':\n        return 'k-i-file-programming';\n\n      case '.exe':\n        return 'k-i-file-config';\n\n      case '.zip':\n      case '.rar':\n        return 'k-i-file-zip';\n\n      default:\n        return 'k-i-file';\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  UploadListSingleItem.prototype.renderValidationError = function (file, isUploadFailed) {\n    return React.createElement(\"span\", {\n      className: 'k-file-name-size-wrapper',\n      key: '2'\n    }, React.createElement(\"span\", {\n      className: 'k-file-name k-file-name-invalid',\n      title: file.name\n    }, file.name), React.createElement(\"span\", {\n      className: 'k-file-validation-message k-text-error'\n    }, this.getFileValidationMessage(file, isUploadFailed)));\n  };\n  /**\n   * @hidden\n   */\n\n\n  UploadListSingleItem.prototype.renderFileDetails = function (file) {\n    var localizationService = provideLocalizationService(this);\n    var successMessage = localizationService.toLanguageString(statusUploaded, messages[statusUploaded]);\n    return React.createElement(\"span\", {\n      className: 'k-file-name-size-wrapper',\n      key: '2'\n    }, React.createElement(\"span\", {\n      className: 'k-file-name',\n      title: file.name\n    }, file.name), file.progress !== 100 ? React.createElement(\"span\", {\n      className: 'k-file-size'\n    }, utils.getTotalFilesSizeMessage([file])) : React.createElement(\"span\", {\n      className: 'k-file-validation-message k-text-success'\n    }, successMessage));\n  };\n  /**\n   * @hidden\n   */\n\n\n  UploadListSingleItem.prototype.render = function () {\n    var _a = this.props,\n        files = _a.files,\n        others = __rest(_a, [\"files\"]);\n\n    var file = files[0];\n    var itemClassName = classNames('k-file-single');\n\n    var _b = utils.getFileStatus([file]),\n        isUploaded = _b[1],\n        isUploadFailed = _b[2],\n        isUploadValidationFailed = _b[3];\n\n    var showProgressBar = !isUploadValidationFailed && !isUploaded && !isUploadFailed;\n    return React.createElement(\"div\", {\n      className: itemClassName\n    }, React.createElement(\"div\", {\n      className: 'k-progressbar',\n      style: {\n        transition: 'opacity 1s ease-in-out',\n        opacity: showProgressBar ? 1 : 0\n      }\n    }, React.createElement(\"span\", {\n      className: 'k-progress',\n      style: {\n        width: (file.progress || 0) + '%'\n      }\n    })), React.createElement(\"span\", {\n      className: 'k-file-group-wrapper',\n      key: '1'\n    }, React.createElement(\"span\", {\n      className: 'k-file-group k-icon ' + this.getFileExtensionIcon(file)\n    }), React.createElement(\"span\", {\n      className: 'k-file-state'\n    })), isUploadValidationFailed || isUploadFailed ? this.renderValidationError(file, isUploadFailed) : this.renderFileDetails(file), React.createElement(UploadListActionButton, __assign({\n      uid: file.uid,\n      status: file.status,\n      progress: file.progress\n    }, others)));\n  };\n\n  return UploadListSingleItem;\n}(React.Component);\n\nexport { UploadListSingleItem };\nregisterForLocalization(UploadListSingleItem);","map":null,"metadata":{},"sourceType":"module"}