{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IPS\\\\Desktop\\\\Projet\\\\Dashboard\\\\react-bootstrap-simple-sidebar\\\\src\\\\components\\\\Uploader\\\\Uploader.js\";\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\nimport { Col, Row, Jumbotron } from 'react-bootstrap';\nconst accessToken = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWFjaGVyZVplQGNvbSIsImV4cCI6MTYyNjgyOTgwNH0.CBI9D_IywNWpcla1vtMLuaq9vTYXFp0MtO48JY1B47Ife4IO_rZmd9TQ5Jb5eMV8twZAF_RoX9JgKyEg1E9AoQ\";\naxios.interceptors.request.use(config => {\n  config.headers.authorization = `Bearer ${accessToken}`;\n  return config;\n});\n\nconst Uploader = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('Choose File');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('http://localhost:8080/init_data/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n        }\n      }); // Clear percentage\n\n      setTimeout(() => setUploadPercentage(0), 10000);\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n\n      setUploadPercentage(0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    className: \" text-dark \",\n    style: {\n      color: '#ffffe1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }\n  }, \"upload votre excel\"), /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 14\n    }\n  }, \"gener votre base donnes!\"), message ? /*#__PURE__*/React.createElement(Message, {\n    msg: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 22\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, filename)), /*#__PURE__*/React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload file\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }))) : null))));\n};\n\nexport default Uploader;","map":{"version":3,"sources":["C:/Users/IPS/Desktop/Projet/Dashboard/react-bootstrap-simple-sidebar/src/components/Uploader/Uploader.js"],"names":["React","Fragment","useState","Message","Progress","axios","Col","Row","Jumbotron","accessToken","interceptors","request","use","config","headers","authorization","Uploader","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","res","post","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","fileName","filePath","data","err","response","status","msg","marginTop","color","textAlign","marginBottom","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\nimport { Col,Row,Jumbotron } from 'react-bootstrap';\r\n\r\n\r\nconst accessToken = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZWFjaGVyZVplQGNvbSIsImV4cCI6MTYyNjgyOTgwNH0.CBI9D_IywNWpcla1vtMLuaq9vTYXFp0MtO48JY1B47Ife4IO_rZmd9TQ5Jb5eMV8twZAF_RoX9JgKyEg1E9AoQ\";\r\n\r\n\r\naxios.interceptors.request.use(\r\n  config => {\r\n    config.headers.authorization = `Bearer ${accessToken}`;\r\n    return config;\r\n  }\r\n);\r\n\r\nconst Uploader = () => {\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:8080/init_data/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        }\r\n      });\r\n\r\n      // Clear percentage\r\n      setTimeout(() => setUploadPercentage(0), 10000);\r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n      setUploadedFile({ fileName, filePath });\r\n\r\n      setMessage('File Uploaded');\r\n\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        setMessage('There was a problem with the server');\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n      setUploadPercentage(0)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <Row>\r\n        <Col lg={12} style={{marginTop:20}}>\r\n\r\n          \r\n        <Jumbotron className=\" text-dark \" style={{color:'#ffffe1'}} >\r\n             <h1 style={{textAlign:'center'} }>upload votre excel</h1>\r\n             <h5 style={{textAlign:'center', marginBottom:30}}>gener votre base donnes!</h5> \r\n                           \r\n          {message ? <Message msg={message} /> : null}\r\n          <form onSubmit={onSubmit}>\r\n            <div className='custom-file mb-4'>\r\n              <input\r\n                type='file'\r\n                className='custom-file-input'\r\n                id='customFile'\r\n                onChange={onChange}\r\n              />\r\n              <label className='custom-file-label' htmlFor='customFile'>\r\n                {filename}\r\n              </label>\r\n            </div>\r\n\r\n            <Progress percentage={uploadPercentage} />\r\n\r\n            <input\r\n              type='submit'\r\n              value='Upload file'\r\n              className='btn btn-primary btn-block mt-4'\r\n            />\r\n          </form>\r\n          {uploadedFile ? (\r\n            <div className='row mt-5'>\r\n              <div className='col-md-6 m-auto'>\r\n                <h3 className='text-center'>{uploadedFile.fileName}</h3>\r\n                <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n             </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n"]},"metadata":{},"sourceType":"module"}