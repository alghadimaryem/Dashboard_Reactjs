{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IPS\\\\Desktop\\\\Projet\\\\Dashboard\\\\react-bootstrap-simple-sidebar\\\\src\\\\components\\\\Uploader\\\\Uploader.js\";\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst Uploader = () => {\n  {\n    /* const [file, setFile] = useState('');\r\n    const [filename, setFilename] = useState('Choose File');\r\n    const [uploadedFile, setUploadedFile] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n      const onChange = e => {\r\n      setFile(e.target.files[0]);\r\n      setFilename(e.target.files[0].name);\r\n    };\r\n      const onSubmit = async e => {\r\n      e.preventDefault();\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n        try {\r\n        const res = await axios.post('/upload', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          onUploadProgress: progressEvent => {\r\n            setUploadPercentage(\r\n              parseInt(\r\n                Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n              )\r\n            );\r\n          }\r\n        });\r\n        \r\n        // Clear percentage\r\n        setTimeout(() => setUploadPercentage(0), 10000);\r\n          const { fileName, filePath } = res.data;\r\n          setUploadedFile({ fileName, filePath });\r\n          setMessage('File Uploaded');\r\n      } catch (err) {\r\n        if (err.response.status === 500) {\r\n          setMessage('There was a problem with the server');\r\n        } else {\r\n          setMessage(err.response.data.msg);\r\n        }\r\n        setUploadPercentage(0)\r\n      }\r\n    };\r\n    */\n  }\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, filename)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }))) : null);\n};\n\nexport default Uploader;","map":{"version":3,"sources":["C:/Users/IPS/Desktop/Projet/Dashboard/react-bootstrap-simple-sidebar/src/components/Uploader/Uploader.js"],"names":["React","Fragment","useState","Message","Progress","axios","Uploader","onSubmit","onChange","filename","uploadedFile","fileName","width","filePath"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB;AAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMG;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAM,IAAA,QAAQ,EAAEC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,EAAE,EAAC,YAHL;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAqC,IAAA,OAAO,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CAPF,CADF,eAeE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,gCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CAFF,EAuBGC,YAAY,gBACX;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,YAAY,CAACC,QAA1C,CADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAA+B,IAAA,GAAG,EAAEF,YAAY,CAACG,QAAjD;AAA2D,IAAA,GAAG,EAAC,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADW,GAOT,IA9BN,CADF;AAkCD,CApFD;;AAsFA,eAAeP,QAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\n\r\nconst Uploader = () => {\r\n {/* const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const res = await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        }\r\n      });\r\n      \r\n      // Clear percentage\r\n      setTimeout(() => setUploadPercentage(0), 10000);\r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n      setUploadedFile({ fileName, filePath });\r\n\r\n      setMessage('File Uploaded');\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        setMessage('There was a problem with the server');\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n      setUploadPercentage(0)\r\n    }\r\n  };\r\n*/}\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <form onSubmit={onSubmit}>\r\n        <div className='custom-file mb-4'>\r\n          <input\r\n            type='file'\r\n            className='custom-file-input'\r\n            id='customFile'\r\n            onChange={onChange}\r\n          />\r\n          <label className='custom-file-label' htmlFor='customFile'>\r\n            {filename}\r\n          </label>\r\n        </div>\r\n\r\n       {/*<Progress percentage={uploadPercentage} />*/}\r\n\r\n        <input\r\n          type='submit'\r\n          value='Upload'\r\n          className='btn btn-primary btn-block mt-4'\r\n        />\r\n      </form>\r\n      {uploadedFile ? (\r\n        <div className='row mt-5'>\r\n          <div className='col-md-6 m-auto'>\r\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\r\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n"]},"metadata":{},"sourceType":"module"}