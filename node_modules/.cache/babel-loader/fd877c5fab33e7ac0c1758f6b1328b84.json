{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { UploadFileStatus } from './interfaces/UploadFileStatus';\nimport { UploadListSingleItem } from './UploadListSingleItem';\nimport { UploadListMultiItem } from './UploadListMultiItem';\nimport utils from './utils/utils';\n/**\n * @hidden\n */\n\nvar UploadListGroup =\n/** @class */\nfunction (_super) {\n  __extends(UploadListGroup, _super);\n\n  function UploadListGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onClick = function () {\n      _this.props.onClick.call(undefined, _this.props.index);\n    };\n\n    return _this;\n  }\n\n  UploadListGroup.prototype.componentDidUpdate = function () {\n    var _a = this.props,\n        navigationIndex = _a.navigationIndex,\n        index = _a.index;\n\n    if (navigationIndex === index && this._element && document.activeElement !== this._element) {\n      this._element.focus();\n    }\n  };\n\n  UploadListGroup.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        files = _a.files,\n        async = _a.async,\n        disabled = _a.disabled,\n        navigationIndex = _a.navigationIndex,\n        index = _a.index,\n        listItemUI = _a.listItemUI,\n        onCancel = _a.onCancel,\n        onRemove = _a.onRemove,\n        onRetry = _a.onRetry;\n    var firstFile = files[0];\n    var isFileSuccess = firstFile.status === UploadFileStatus.Uploaded || firstFile.status === UploadFileStatus.Initial;\n    var liClassName = classNames('k-file', utils.filesHaveValidationErrors(files) ? 'k-file-invalid' : '', firstFile.status === UploadFileStatus.UploadFailed || firstFile.status === UploadFileStatus.RemoveFailed ? 'k-file-error' : '', firstFile.status === UploadFileStatus.Uploading ? 'k-file-progress' : '', isFileSuccess ? 'k-file-success' : '', navigationIndex === index ? 'k-state-focused' : '');\n    var itemOptions = {\n      async: async,\n      disabled: disabled,\n      onCancel: onCancel,\n      onRemove: onRemove,\n      onRetry: onRetry\n    };\n    var ItemComponent = listItemUI || (files.length === 1 ? UploadListSingleItem : UploadListMultiItem);\n    return React.createElement(\"li\", {\n      ref: function (ref) {\n        return _this._element = ref;\n      },\n      className: liClassName,\n      \"data-uid\": firstFile.uid,\n      tabIndex: -1,\n      onClick: this.onClick\n    }, React.createElement(ItemComponent, __assign({\n      files: files\n    }, itemOptions)));\n  };\n\n  return UploadListGroup;\n}(React.Component);\n\nexport { UploadListGroup };","map":null,"metadata":{},"sourceType":"module"}